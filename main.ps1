$ErrorActionPreference = "SilentlyContinue" #1 IHop
class Question {
    [int]$id
    [string]$type = 'default' # Default = text answer; code = answer generated by a scriptblock;
    [string]$prompt
    [scriptblock]$preliminary = $null #3 ou
    [object]$answer 
    [string]$hint = "There is no hint for this question, try harder!"

    Question([int]$id, [string]$type, [string]$prompt, [scriptblock]$preliminary, [object]$answer) {
        $this.id = $id
        $this.type = $type
        $this.prompt = $prompt
        $this.preliminary = $preliminary
        $this.answer = $answer #2 eThatY
    }

        Question([int]$id, [string]$type, [string]$prompt, [scriptblock]$preliminary, [object]$answer, [string]$hint) {
        $this.id = $id
        $this.type = $type #4 DidntBrea
        $this.prompt = $prompt
        $this.preliminary = $preliminary
        $this.answer = $answer
        $this.hint = $hint
    }
 #14 YouS
    [bool]CheckAnswer([string]$userInput) {
        try {
            if ($this.Type -eq 'code') {
                $preliminaryOutput = & $this.preliminary
                $this.answer = $preliminaryOutput.ToString().Trim()
            } 

        } catch {
            Write-Host "Error executing preliminary code. Please check the question setup."
        }
        
        if ($this.answer -eq "")
        {
            write-host "Error in getting answer for Question $($this.id)"
            $this.answer = "ERROR | Error getting the result for this question, please skip it"
            return $false
        }

        return $userInput.trim() -eq $this.answer.ToString().Trim()
    }
}
#12 nCong
function Convert-ToBase64 {
    param(
        [Parameter(Mandatory=$true)]
        [string]$Text
    )
    $bytes = [System.Text.Encoding]::UTF8.GetBytes($Text)
    $base64 = [Convert]::ToBase64String($bytes)
    return $base64 #15 ucces
}

function Convert-FromBase64 { #5 kAndJustSubmi
    param(
        [Parameter(Mandatory=$true)]
        [string]$Base64
    )
    $bytes = [Convert]::FromBase64String($Base64)
    $text = [System.Text.Encoding]::UTF8.GetString($bytes)
    return $text
}
#13 ats!
function Get-RandomString {
    param (
        [int]$length,
        [char[]]$charSet
    )
    
    $randomString = -join (1..$length | ForEach-Object { Get-Random -InputObject $charSet })
    return $randomString
}
 #11 nt,The
# Uppercase A-Z
$uppercaseAlphabet = 65..90 | ForEach-Object { [char]$_ }

# Lowercase a-z
$lowercaseAlphabet = 97..122 | ForEach-Object { [char]$_ }

function Invoke-Rot13 {
    param (
        [Parameter(Mandatory=$true)]
        [string]$InputString
    )
#22 eInB
    $rot13String = $InputString.ToCharArray() | ForEach-Object {
        $char = $_
        if ($uppercaseAlphabet -ccontains $char) {
            $char = [char]((([int][char]$char - 65 + 13) % 26) + 65)
        }
        elseif ($lowercaseAlphabet -ccontains $char) {
            $char = [char]((([int][char]$char - 97 + 13) % 26) + 97)
        }
        return $char
    }

    return -join $rot13String
}

# Define a character set
$charSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'.ToCharArray()
$charSet_full = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789;!@#$%^&*'.ToCharArray()

### consts

$intro_text = '
Hello! Welcome to the ''Powershell Zero to Hero'' game!
The name is pretty indicative so without further ado, some instructions:

1. The basic structure of a Powershell command resembles a CMD command structure of <Command> [-Parameters [Parameters'' Value]] [| <Another Command>]
For instance: Get-Process -Name "chrome" | Stop-Process

2. The goal of this game is to answer all the questions one by one. When you answer correctly, you advance to the next question. 

3. From now on, you should probably prefer Powershell over CMD, old habits die hard but between us, you know it''s time. 
If for some reason you would still prefer to use CMD commands in this exercise, mostly in the first questions, you might struggle more with more advanced questions as they rely on information learned in previous questions.

4. As the game continues, try to keep a record of your answers for each question in case you accidentally exit the terminal.

5. The questions are tailored to the system that runs the program. A good approach would be to create a Powershell ISE session on the same machine that runs this program, then press Ctrl+R to be able to run scripts and even debug quickly. You might need to set the Execution Policy to Bypass to be able to run scripts.
Nothing malicious is running as part of this exercise so besides the phishy compilation (if you are running the executable), you shouldn''t worry from being flagged. EXCEPT for the bonus questions! You should NOT run or investigate the bonus questions on your machine! (don''t worry it will not happen automatically).

6. In case you struggle with a question, especially the first ones, there are some hints to guide you. 
If you are experiencing technical difficulties as a result that I tried to not spend too much time on creating this game then don''t waste your time and let me know.

Hope you enjoy!
'
#6 ttedT
$sort_hashtable = '$hashtable = @{
    "g7S" = "G"
    "t7H" = "e"
    "m5M" = "l"
    "v3F" = "o"
    "e1U" = "T"
    "i6Q" = "u"
    "q4J" = "s"
    "97Z" = "g"
    "w5E" = "P"
    "j3P" = "o"
    "_4a" = "u"
    "d2V" = "o"
    "s6I" = "r"
    "w8D" = "e"
    "l9N" = "l"
    "k2O" = "Y"
    "*6c" = "g"
    "p1K" = "h"
    "h0R" = "r"
    "f4T" = "o"
    "c8W" = "L"
    "!5d" = "e"
    "b9X" = "a"
    "a3Y" = "n"
    "n8L" = "e"
    "u0G" = "w"
    "z1A" = "M"
    "xwB" = "a"
    "xtC" = "k"
    "@1b" = "a"
}'

$iis_logs = 'IP_Address Remote_Logname Remote_User Date Request Status_Code Response_Size Referrer User_Agent
127.0.0.1 - - [10/Oct/2023:13:55:36 +0000] "GET /index.html HTTP/1.1" 200 532 "http://example.com/start.html" "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko"
127.0.0.1 - - [10/Oct/2023:13:55:37 +0000] "POST /form_submit.php HTTP/1.1" 404 182 "http://example.com/form.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:38 +0000] "GET /missing-page.html HTTP/1.1" 404 123 "http://example.com/missing.html" "Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Mobile Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:39 +0000] "GET /products/list HTTP/1.1" 200 975 "http://example.com/products.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15"
127.0.0.1 - - [10/Oct/2023:13:55:40 +0000] "PUT /api/user/12345 HTTP/1.1" 201 702 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:41 +0000] "DELETE /api/post/67890 HTTP/1.1" 403 415 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:42 +0000] "GET /news/latest-news.html HTTP/1.1" 303 1578 "http://example.com/news.html" "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko"
127.0.0.1 - - [10/Oct/2023:13:55:43 +0000] "GET /images/logo.png HTTP/1.1" 304 0 "http://example.com/index.html" "Mozilla/5.0 (iPhone; CPU iPhone OS 13_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Mobile/15E148 Safari/604.1"
127.0.0.1 - - [10/Oct/2023:13:55:44 +0000] "POST /contact/form HTTP/1.1" 302 0 "http://example.com/contact.html" "Mozilla/5.0 (iPad; CPU OS 14_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1"
127.0.0.1 - - [10/Oct/2023:13:55:45 +0000] "GET /services.html HTTP/1.1" 401 745 "http://example.com/login.html" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:46 +0000] "GET /dashboard HTTP/1.1" 302 0 "http://example.com/home.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:47 +0000] "GET /css/style.css HTTP/1.1" 304 1024 "http://example.com/index.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:48 +0000] "GET /js/app.js HTTP/1.1" 206 587 "http://example.com/index.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:49 +0000] "GET /about-us HTTP/1.1" 404 234 "http://example.com/about.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0"
127.0.0.1 - - [10/Oct/2023:13:55:50 +0000] "GET /favicon.ico HTTP/1.1" 302 1430 "http://example.com" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:51 +0000] "GET /profile/settings HTTP/1.1" 403 512 "http://example.com/profile.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:52 +0000] "POST /api/login HTTP/1.1" 204 760 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:53 +0000] "GET /search?q=powershell HTTP/1.1" 303 1250 "http://example.com/search.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.1 Safari/605.1.15"
127.0.0.1 - - [10/Oct/2023:13:55:54 +0000] "GET /api/data?filter=recent HTTP/1.1" 500 642 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:55 +0000] "GET /blog/2023/powershell-tips HTTP/1.1" 200 1875 "http://example.com/blog.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:56 +0000] "POST /webhook/receive HTTP/1.1" 202 340 "http://example.com/webhooks.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:57 +0000] "GET /events HTTP/1.1" 418 1283 "http://example.com/events.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:58 +0000] "GET /privacy-policy HTTP/1.1" 301 0 "http://example.com/privacy.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.193 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:59 +0000] "GET /terms-and-conditions HTTP/1.1" 200 1548 "http://example.com/terms.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:00 +0000] "GET /sitemap.xml HTTP/1.1" 201 958 "http://example.com/robots.txt" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:01 +0000] "POST /api/items/new HTTP/1.1" 302 200 "http://example.com/api/guide" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:02 +0000] "GET /api/items/12345 HTTP/1.1" 404 98 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:03 +0000] "PUT /api/items/12345/update HTTP/1.1" 204 0 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:04 +0000] "DELETE /api/items/12345 HTTP/1.1" 403 178 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:05 +0000] "GET /archive/2023/ HTTP/1.1" 304 3420 "http://example.com/archive.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:06 +0000] "GET /help/faq HTTP/1.1" 303 2160 "http://example.com/help.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:07 +0000] "GET /assets/img/header.jpg HTTP/1.1" 304 0 "http://example.com/index.html" "Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Mobile/15E148 Safari/604.1"
127.0.0.1 - - [10/Oct/2023:13:56:08 +0000] "GET /video/tutorials/intro.mp4 HTTP/1.1" 206 524288 "http://example.com/videos.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:09 +0000] "GET /articles/powershell-advantages HTTP/1.1" 200 1032 "http://example.com/articles.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:10 +0000] "GET /download/powershell-script.ps1 HTTP/1.1" 304 480 "http://example.com/downloads.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:49 +0000] "GET /about-us HTTP/1.1" 404 234 "http://example.com/about.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0"
127.0.0.1 - - [10/Oct/2023:13:55:50 +0000] "GET /favicon.ico HTTP/1.1" 200 1430 "http://example.com" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:51 +0000] "GET /profile/settings HTTP/1.1" 403 512 "http://example.com/profile.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:52 +0000] "POST /api/login HTTP/1.1" 304 760 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:53 +0000] "GET /search?q=powershell HTTP/1.1" 200 1250 "http://example.com/search.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.1 Safari/605.1.15"
127.0.0.1 - - [10/Oct/2023:13:55:54 +0000] "GET /api/data?filter=recent HTTP/1.1" 500 642 "http://example.com/api/documentation" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:55 +0000] "GET /blog/2023/powershell-tips HTTP/1.1" 303 200 "http://example.com/blog.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:56 +0000] "POST /webhook/receive HTTP/1.1" 202 340 "http://example.com/webhooks.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:57 +0000] "GET /events HTTP/1.1" 418 1283 "http://example.com/events.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:58 +0000] "GET /privacy-policy HTTP/1.1" 301 0 "http://example.com/privacy.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.193 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:55:59 +0000] "GET /terms-and-conditions HTTP/1.1" 303 200 "http://example.com/terms.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:00 +0000] "GET /sitemap.xml HTTP/1.1" 404 958 "http://example.com/robots.txt" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:01 +0000] "POST /api/items/new HTTP/1.1" 302 174 "http://example.com/api/guide" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:02 +0000] "GET /api/items/12345 HTTP/1.1" 404 98 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:03 +0000] "PUT /api/items/12345/update HTTP/1.1" 204 0 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:04 +0000] "DELETE /api/items/12345 HTTP/1.1" 500 178 "http://example.com/api/items" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:05 +0000] "GET /archive/2023/ HTTP/1.1" 303 3420 "http://example.com/archive.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:06 +0000] "GET /help/faq HTTP/1.1" 403 2160 "http://example.com/help.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:07 +0000] "GET /assets/img/header.jpg HTTP/1.1" 304 200 "http://example.com/index.html" "Mozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Mobile/15E148 Safari/604.1"
127.0.0.1 - - [10/Oct/2023:13:56:08 +0000] "GET /video/tutorials/intro.mp4 HTTP/1.1" 403 524288 "http://example.com/videos.html" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:09 +0000] "GET /articles/powershell-advantages HTTP/1.1" 200 1032 "http://example.com/articles.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
127.0.0.1 - - [10/Oct/2023:13:56:10 +0000] "GET /download/powershell-script.ps1 HTTP/1.1" 303 480 "http://example.com/downloads.html" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
'
#21 codeM
$reg_key = "HKCU:\Powershell0toH"
$reg_keys = @{
    "k1XeR2L" = "o3n4roo6o8ooX9oXZoY2oYoWoVoUToSoRoQoPoNoMoLoKoJoIoHoGoF1L3M5K7N" 
    "Y2uT4oP" = "bC5DoFoHoJoLoNoP8ooqoToVoXoZoo1o3o5o7o9XbXdXfXhXjXlXnXpXrXtXvXxXzX1" 
    "p3Lk9QW" = "oX2CoEo0oIoKoMoOoQoS6UoWoYo1o3o5o7oo9XobXdXfXhXjXlXnXp0rXotXvXxXzX2o" 
    "ZxP5To2" = "XCoEoGoIoKoMoOoQoS6UooWoYo1o3o5o7o9XbX0XofXhX00lXnXpXrXtoXvXxXzX2o4R" 
    "N6yU8Ik" = "oX2o4o6o8XaXcXeXgXiXk00XoXqXsXuXwXyX1X3X5X7X9YoZbYdYfYhYjYlYnYoYqYr" 
    "W3R5T7Y" = "oX2o4o6o8XaXcXeXgXiXkXmXooXqXsXuXwXyX1X3X5X7X9YoZbYdYfYhYjYlYnYoYqYs" 
    "o8P0L4K" = "X2X4Xot096X8YaYcYeoooooooooooY103Yo5Y7Y9ZaZcZeZoooomZoZqooZsZuZw" 
    "Q1F3H5J" = "oXoZoYoWoVoUoToSoRoQoPoNoMoLoKoJoIoHoGoFooDoBo9o7o5o3o1XZXYXXWVUTSR" 
    "L9K8J7H" = "GFEoCoAo8o6o4o2o0XZXVXUXSoXRXPXoooIXGXEXCoXAX9Xo7X5X3Xo1ZWYWUWTSWRV" 
    "M1N2B3V" = "oXoZoYoWooVoUoToSoRoQoPoNoMoLoKoJoIoHoGoFoDoBo9o7o5o3o1XZXYXXWVUTSo" 
    "C4X5C6V" = "BNAoMoQoSoUooWoYo1o3o5o7o9XbXdXfXhXjXlXnXpXrXotXvXxXozX1X3X5X7X9YaYcYe" 
    "Z7X8C9V" = "oXoZoYoWoVoUoToSoRoQoPoNoMoLoKoJ00oHoGoFoDooBo9o7o5o3o1XZXYXXWVUTSR" 
    "B5N4M3L" = "KJIH0oEoCoAo8o6o4o2o0oXZXVXUXSXRXPXNXLXKXIXGXEXCXAX9X7X5X3X1ZWYWUWT" 
    "Q2W3E4R" = "TYXoVoToRoPoNoLoJoHoGoFoDoBoAo8o6o4o2o0X0XVXUXSXRXPXNXLXKXIXGXEXC" 
    "T5Y6U7I" = "oXZXYWoVoUoToSoRoQoPoNoMoLoKoJoIoHoGoFoDooBoAo9X7X5X3X1ZoWYWUWTSWRVQ" 
    "O9P0A4S" = "oXoZoYoWoVoUoToSoRo0oPoNoMoLoKoJoIoHooGoFoDoBo9o7o5o3o1XZoXoXWVUTSR" 
    "D7F8G9H" = "oJIoHoGoFoDoBoAo8o6oo4o2o0XZXVXUXSXRXPXNXLXKXIXGXoEXCXAX9X7X5X3X1ZWX" 
    "J1K2L3Z" = "oXoZoYoWoVoUoToSoRoQoPoNoMoLoKoJoIoHoGoFoDoBo9oo7o5o3o1XZXYXXWVUTSR" 
    "X3C4V5B" = "oNoMoLoKoJoIoHoGo00DoBoAo8o6oo4o2o0XZXVXUoXSXRXPXNXLXKXI0GXEXCXooAX9X7" 
    }
#20 me!En
$b64_dir_path = "C:\Users\Public\Powershell0toH"
$b64_file_name = "T5Y6U7I"
$b64_file_text = 'lVHHHr6gwiaCvAJetW0mkAsejOUI^dQa#T$ZCh!zRZH5$oJijjw8@fC!oyR;2aHJ7e$DGk;Wnig4bZ2H034wAI9bOHxm9oo%xGO!&h0iZO6
%Lt@Kg$ECpKIYS7oP#z;UWTA8OrlS2RvA9rYa9EF3qZ7UIdTZn1lpAMu7wY*MJL*F@aP#mrmii;p35#hbYseLrC#2z3P&k3@Mu1BJjm;KGcWW0Wk4y9&jo;Oqz^nDVv2$elt4vSRjdKr#dTG^
*FOrq@1kpueN484;k8Khe790mE@$FLfFnW1lvwFfW&tvU&UKBkEbU^t5m@kUY306NxmZN^SapNL!@$VCKu5$OrFu7nHQF4Z5SqO1#pZTu1Fhc$Xx$Fa%tNn64N5Sg*1ZZ3nX2YtC6l@zydnySZdFQXw#y2h9SJC50#ppcu^iZ9kS7MlqX#ZGMbTNQj4i8YVAfDu!S!PdO6q4H9Db1LqGBBmrY
eUuux9ueETjfVyV1%aXULeNo&'
#  '#[omri]{3,7};???#'
$b64_pattern = '#[omri]{3,7};.{3}#'

$csv = '"Type","CommandType","Name","Version","Source","Comment"
"A","Cmdlet","Add-AzureRmHDInsightComponentVersion","4.1.2","AzureRM.HDInsight","G0mp7SI"
"B","Cmdlet","Add-AzureRmLoadBalancerInboundNatPoolConfig","5.4.2","AzureRM.Network","G0mp7SI"
"C","Cmdlet","Add-Member","3.1.0.0","Microsoft.PowerShell.Utility","GuvfVfN"
"A","Cmdlet","Add-Type","3.1.0.0","Microsoft.PowerShell.Utility","A8e4aqm"
"B","Cmdlet","Clear-RecycleBin","3.1.0.0","Microsoft.PowerShell.Management","jVtgpA1"
"C","Cmdlet","Clear-UevConfiguration","2.1.639.0","UEV","Irelyba"
"A","Cmdlet","Clear-Variable","3.1.0.0","Microsoft.PowerShell.Utility","BcHfdHt"
"B","Cmdlet","Compare-Object","3.1.0.0","Microsoft.PowerShell.Utility","St3jhI9"
"C","Cmdlet","ConvertFrom-Csv","3.1.0.0","Microsoft.PowerShell.Utility","tGrkgGu"
"A","Cmdlet","ConvertFrom-Json","3.1.0.0","Microsoft.PowerShell.Utility","wWpoa8y"
"B","Function","ConvertFrom-SddlString","3.1.0.0","Microsoft.PowerShell.Utility","9WKWhKN"
"C","Cmdlet","ConvertFrom-String","3.1.0.0","Microsoft.PowerShell.Utility","ngVArrq"
"A","Cmdlet","ConvertFrom-StringData","3.1.0.0","Microsoft.PowerShell.Utility","MD2xzdX"
"B","Cmdlet","Convert-String","3.1.0.0","Microsoft.PowerShell.Utility","BcwQKYh"
"C","Cmdlet","ConvertTo-Csv","3.1.0.0","Microsoft.PowerShell.Utility","GbSvyyH"
"A","Cmdlet","ConvertTo-Html","3.1.0.0","Microsoft.PowerShell.Utility","ZI2uZQv"
"B","Cmdlet","ConvertTo-Json","3.1.0.0","Microsoft.PowerShell.Utility","18m5trL"
"C","Cmdlet","ConvertTo-TpmOwnerAuth","2.0.0.0","TrustedPlatformModule","cOhgVsV"
"A","Cmdlet","ConvertTo-Xml","3.1.0.0","Microsoft.PowerShell.Utility","cQpkGL0"
"B","Function","Debug-FileShare","2.0.0.0","Storage","cQpkGL0"
"C","Cmdlet","Debug-Runspace","3.1.0.0","Microsoft.PowerShell.Utility","Nyernql"
"A","Function","Delete-DeliveryOptimizationCache","1.0.3.0","DeliveryOptimization","fQy4x0m"
"B","Cmdlet","Disable-BcdElementHypervisorDebug","1.0.0","Microsoft.Windows.Bcd.Cmdlets","JedzAYS"
"C","Cmdlet","Disable-ComputerRestore","3.1.0.0","Microsoft.PowerShell.Management","TbgLbhe"
"A","Cmdlet","Disable-PSBreakpoint","3.1.0.0","Microsoft.PowerShell.Utility","TDFA78m"
"B","Cmdlet","Disable-RunspaceDebug","3.1.0.0","Microsoft.PowerShell.Utility","ZI2uZQv"
"C","Cmdlet","Disconnect-VMNetworkAdapter","2.0.0.0","Hyper-V","Nggragv"
"A","Function","Enable-NetAdapterIPsecOffload","2.0.0.0","NetAdapter","18m5trL"
"B","Cmdlet","Enable-PSBreakpoint","3.1.0.0","Microsoft.PowerShell.Utility","5oIVNfq"
"C","Cmdlet","Enable-RunspaceDebug","3.1.0.0","Microsoft.PowerShell.Utility","baVJnag"
"A","Cmdlet","Enable-VMMigration","2.0.0.0","Hyper-V","mvD571W"
"B","Cmdlet","Export-Alias","3.1.0.0","Microsoft.PowerShell.Utility","qVsKyqF"
"C","Cmdlet","Export-Clixml","3.1.0.0","Microsoft.PowerShell.Utility","GbFnlTb"
"A","Cmdlet","Export-Csv","3.1.0.0","Microsoft.PowerShell.Utility","MD2xzdX"
"B","Cmdlet","Export-FormatData","3.1.0.0","Microsoft.PowerShell.Utility","fQy4x0m"
"C","Cmdlet","Export-PSSession","3.1.0.0","Microsoft.PowerShell.Utility","bqWbo!L"
"A","Cmdlet","Format-Custom","3.1.0.0","Microsoft.PowerShell.Utility","BcwQKYh"
"B","Function","Format-Hex","3.1.0.0","Microsoft.PowerShell.Utility","mvD571W"
"C","Cmdlet","Format-List","3.1.0.0","Microsoft.PowerShell.Utility","bhNerNy"
"A","Cmdlet","Format-Table","3.1.0.0","Microsoft.PowerShell.Utility","18m5trL"
"B","Cmdlet","Format-Wide","3.1.0.0","Microsoft.PowerShell.Utility","z75T6vk"
"C","Cmdlet","Get-Alias","3.1.0.0","Microsoft.PowerShell.Utility","zbfgBir"
"A","Alias","Get-ASREvent","0.2.4","AzureRM.RecoveryServices.SiteRecovery","TDFA78m"
"B","Alias","Get-ASRFabric","0.2.4","AzureRM.RecoveryServices.SiteRecovery","xuLafnp"
"C","Cmdlet","Get-AzureAutomationSchedule","5.1.2","Azure","e!Gurer"
"A","Cmdlet","Get-AzureRmBackupJobDetails","4.0.4","AzureRM.Backup","pSvJim9"
"B","Cmdlet","Get-AzureRmBgpServiceCommunity","5.4.2","AzureRM.Network","44HohF0"
"C","Cmdlet","Get-AzureRmDataLakeStoreChildItem","5.2.0","AzureRM.DataLakeStore","NerBayl"
"A","Cmdlet","Get-AzureRmEventGridTopicKey","0.3.2","AzureRM.EventGrid","GUvL5Hq"
"B","Cmdlet","Get-AzureRmIotHubJob","3.1.2","AzureRM.IotHub","BcHfdHt"
"C","Cmdlet","Get-AzureRmManagedApplication","5.5.2","AzureRM.Resources","NSrjDhr"
"A","Cmdlet","Get-AzureRmOperationalInsightsSavedSearch","4.3.2","AzureRM.OperationalInsights","G0mp7SI"
"B","Cmdlet","Get-AzureRmSiteRecoveryServer","5.0.6","AzureRM.SiteRecovery","wypOjA8"
"C","Cmdlet","Get-AzureRmSnapshot","4.6.0","AzureRM.Compute","fgvbafY"
"A","Cmdlet","Get-AzureRmSqlSyncMember","4.4.0","AzureRM.Sql","7UNItLB"
"B","Cmdlet","Get-AzureRmVirtualNetworkGatewayConnection","5.4.2","AzureRM.Network","wWpoa8y"
"C","Cmdlet","Get-AzureRmWebAppMetrics","4.2.2","AzureRM.Websites","rsgNaqL"
"A","Cmdlet","Get-AzureStorageKey","5.1.2","Azure","jVtgpA1"
"B","Cmdlet","Get-AzureVNetConfig","5.1.2","Azure","G0mp7SI"
"C","Cmdlet","Get-Culture","3.1.0.0","Microsoft.PowerShell.Utility","bhTbgVg"
"A","Cmdlet","Get-Date","3.1.0.0","Microsoft.PowerShell.Utility","qVsKyqF"
"B","Cmdlet","Get-Event","3.1.0.0","Microsoft.PowerShell.Utility","A8e4aqm"
"C","Cmdlet","Get-EventSubscriber","3.1.0.0","Microsoft.PowerShell.Utility","!VUbcrG"
"A","Function","Get-FileHash","3.1.0.0","Microsoft.PowerShell.Utility","JedzAYS"
"B","Cmdlet","Get-FormatData","3.1.0.0","Microsoft.PowerShell.Utility","JedzAYS"
"C","Function","Get-HnsPolicyList","1.0.0.1","HostNetworkingService","ungAbjL"
"A","Cmdlet","Get-Host","3.1.0.0","Microsoft.PowerShell.Utility","ZI2uZQv"
"B","Cmdlet","Get-Member","3.1.0.0","Microsoft.PowerShell.Utility","rxwrZU8"
"C","Function","Get-NetAdapterChecksumOffload","2.0.0.0","NetAdapter","bhPnaFn"
"A","Cmdlet","Get-Package","1.0.0.1","PackageManagement","MD2xzdX"
"B","Cmdlet","Get-PSBreakpoint","3.1.0.0","Microsoft.PowerShell.Utility","BcHfdHt"
"C","Cmdlet","Get-PSCallStack","3.1.0.0","Microsoft.PowerShell.Utility","srylFnl"
"A","Cmdlet","Get-Random","3.1.0.0","Microsoft.PowerShell.Utility","BcwQKYh"
"B","Cmdlet","Get-Runspace","3.1.0.0","Microsoft.PowerShell.Utility","afjF8el"
"C","Cmdlet","Get-RunspaceDebug","3.1.0.0","Microsoft.PowerShell.Utility","GungLbh"
"A","Alias","Get-SSStorageAccountCredential","5.1.2","Azure","pSvJim9"
"B","Function","Get-StorageBusTargetCacheStoresInstance","1.0.0.0","StorageBusCache","St3jhI9"
"C","Function","Get-SupportedClusterSizes","2.0.0.0","Storage","SrryPbz"
"A","Cmdlet","Get-TraceSource","3.1.0.0","Microsoft.PowerShell.Utility","9WKWhKN"
"B","Cmdlet","Get-TypeData","3.1.0.0","Microsoft.PowerShell.Utility","afjF8el"
"C","Cmdlet","Get-UICulture","3.1.0.0","Microsoft.PowerShell.Utility","sbegnoy"
"A","Cmdlet","Get-Unique","3.1.0.0","Microsoft.PowerShell.Utility","MD2xzdX"
"B","Cmdlet","Get-Variable","3.1.0.0","Microsoft.PowerShell.Utility","pSvJim9"
"C","Cmdlet","Get-VMHostPartitionableGpu","2.0.0.0","Hyper-V","rJevgva"
"A","Alias","Get-WAPackWebsiteLog","5.1.2","Azure","JedzAYS"
"B","Cmdlet","Get-WSManInstance","3.0.0.0","Microsoft.WSMan.Management","afjF8el"
"C","Cmdlet","Grant-AzureRmHDInsightHttpServicesAccess","4.1.2","AzureRM.HDInsight","tPbqrVa"
"A","Cmdlet","Group-Object","3.1.0.0","Microsoft.PowerShell.Utility","3nGwQEz"
"B","Cmdlet","Import-Alias","3.1.0.0","Microsoft.PowerShell.Utility","GUvL5Hq"
"C","Cmdlet","Import-AzureRmDataLakeStoreItem","5.2.0","AzureRM.DataLakeStore","CbjreFu"
"A","Cmdlet","Import-AzureRmRecoveryServicesAsrVaultSettingsFile","0.2.4","AzureRM.RecoveryServices.SiteRecovery","3nGwQEz"
"B","Cmdlet","Import-BcdStore","1.0.0","Microsoft.Windows.Bcd.Cmdlets","z75T6vk"
"C","Cmdlet","Import-Clixml","3.1.0.0","Microsoft.PowerShell.Utility","ryyNaqG"
"A","Cmdlet","Import-Csv","3.1.0.0","Microsoft.PowerShell.Utility","mvD571W"
"B","Cmdlet","Import-LocalizedData","3.1.0.0","Microsoft.PowerShell.Utility","9WKWhKN"
"C","Function","Import-PowerShellDataFile","3.1.0.0","Microsoft.PowerShell.Utility","urZbfgV"
"A","Cmdlet","Import-PSSession","3.1.0.0","Microsoft.PowerShell.Utility","pq7IUBh"
"B","Cmdlet","Invoke-Expression","3.1.0.0","Microsoft.PowerShell.Utility","KfiNMKE"
"C","Cmdlet","Invoke-RestMethod","3.1.0.0","Microsoft.PowerShell.Utility","zcbegna"
"A","Cmdlet","Invoke- W3bR3q uest","3.1.0.0","Microsoft.PowerShell.Utility","mvD571W"
"B","Cmdlet","Measure-Command","3.1.0.0","Microsoft.PowerShell.Utility","18m5trL"
"C","Cmdlet","Measure-Object","3.1.0.0","Microsoft.PowerShell.Utility","gGuvatv"
"A","Alias","Mount-AppPackageVolume","2.0.1.0","Appx","BcwQKYh"
"B","Cmdlet","New-Alias","3.1.0.0","Microsoft.PowerShell.Utility","GUvL5Hq"
"C","Alias","New-ASRNetworkMapping","0.2.4","AzureRM.RecoveryServices.SiteRecovery","fGungLb"
"A","Cmdlet","New-AzureRmBackupVault","4.0.4","AzureRM.Backup","JedzAYS"
"B","Cmdlet","New-AzureRmLocalNetworkGateway","5.4.2","AzureRM.Network","5oIVNfq"
"C","Cmdlet","New-AzureRmSiteRecoverySite","5.0.6","AzureRM.SiteRecovery","hRawblr"
"A","Cmdlet","New-AzureRmSqlServerDnsAlias","4.4.0","AzureRM.Sql","xuLafnp"
"B","Cmdlet","New-Event","3.1.0.0","Microsoft.PowerShell.Utility","xuLafnp"
"C","Function","New-Guid","3.1.0.0","Microsoft.PowerShell.Utility","q!GuvfV"
"A","Function","New-NetIPHttpsConfiguration","1.0.0.0","NetworkTransition","KfiNMKE"
"B","Function","New-NetQosPolicy","2.0.0.0","NetQos","TDFA78m"
"C","Cmdlet","New-Object","3.1.0.0","Microsoft.PowerShell.Utility","fNIrely"
"A","Alias","New-SSAccessControlRecord","5.1.2","Azure","pSvJim9"
"B","Function","New-TemporaryFile","3.1.0.0","Microsoft.PowerShell.Utility","p78V9EK"
"C","Cmdlet","New-TimeSpan","3.1.0.0","Microsoft.PowerShell.Utility","batGrkg"
"A","Cmdlet","New-Variable","3.1.0.0","Microsoft.PowerShell.Utility","5oIVNfq"
"B","Cmdlet","New-WebServiceProxy","3.1.0.0","Microsoft.PowerShell.Management","BcwQKYh"
"C","Cmdlet","Optimize-VHDSet","2.0.0.0","Hyper-V","GungVAr"
"A","Cmdlet","Out-File","3.1.0.0","Microsoft.PowerShell.Utility","mvD571W"
"B","Cmdlet","Out-GridView","3.1.0.0","Microsoft.PowerShell.Utility","BcHfdHt"
"C","Cmdlet","Out-Printer","3.1.0.0","Microsoft.PowerShell.Utility","rqGbSvy"
"A","Cmdlet","Out-String","3.1.0.0","Microsoft.PowerShell.Utility","5oIVNfq"
"B","Cmdlet","Read-Host","3.1.0.0","Microsoft.PowerShell.Utility","f8gd87v"
"C","Cmdlet","Register-AzureRmResourceProvider","5.5.2","AzureRM.Resources","yHcOhgV"
"A","Cmdlet","Register-EngineEvent","3.1.0.0","Microsoft.PowerShell.Utility","afjF8el"
"B","Cmdlet","Register-ObjectEvent","3.1.0.0","Microsoft.PowerShell.Utility","G0mp7SI"
"C","Alias","Remove-ASRvCenter","0.2.4","AzureRM.RecoveryServices.SiteRecovery","sVNyern"
"A","Cmdlet","Remove-AzureInternalLoadBalancer","5.1.2","Azure","rxwrZU8"
"B","Cmdlet","Remove-AzureRmAutomationModule","4.3.2","AzureRM.Automation","wWpoa8y"
"C","Cmdlet","Remove-AzureRmManagedApplication","5.5.2","AzureRM.Resources","qlTbgLb"
"A","Cmdlet","Remove-AzureRmSchedulerJobCollection","0.16.3","AzureRM.Scheduler","wWpoa8y"
"B","Cmdlet","Remove-AzureRmSqlServerKeyVaultKey","4.4.0","AzureRM.Sql","9WKWhKN"
"C","Cmdlet","Remove-AzureRmVirtualNetworkGateway","5.4.2","AzureRM.Network","heNggra"
"A","Cmdlet","Remove-AzureSqlDatabaseServerFirewallRule","5.1.2","Azure","3nGwQEz"
"B","Cmdlet","Remove-AzureStorSimpleDeviceBackupPolicy","5.1.2","Azure","xuLafnp"
"C","Cmdlet","Remove-Event","3.1.0.0","Microsoft.PowerShell.Utility","gvbaVJn"
"A","Function","Remove-MpPreference","1","Defender","f8gd87v"
"B","Cmdlet","Remove-PSBreakpoint","3.1.0.0","Microsoft.PowerShell.Utility","TDFA78m"
"C","Cmdlet","Remove-TypeData","3.1.0.0","Microsoft.PowerShell.Utility","agGbFnl"
"A","Cmdlet","Remove-Variable","3.1.0.0","Microsoft.PowerShell.Utility","JedzAYS"
"B","Function","Rename-MaskingSet","2.0.0.0","Storage","18m5trL"
"C","Cmdlet","Restart-AzureBatchComputeNode","4.0.6","AzureRM.Batch","TbbqWbo"
"A","Cmdlet","Restart-AzureVM","5.1.2","Azure","G0mp7SI"
"B","Cmdlet","Revoke-AzureRmDiskAccess","4.6.0","AzureRM.Compute","3nGwQEz"
"C","Cmdlet","Revoke-AzureRmHDInsightHttpServicesAccess","4.1.2","AzureRM.HDInsight","!LbhNer"
"A","Function","Save-NetworkSwitchConfiguration","1.0.0.0","NetworkSwitchManager","BcHfdHt"
"B","Cmdlet","Select-Object","3.1.0.0","Microsoft.PowerShell.Utility","cQpkGL0"
"C","Cmdlet","Select-String","3.1.0.0","Microsoft.PowerShell.Utility","NyzbfgB"
"A","Cmdlet","Select-Xml","3.1.0.0","Microsoft.PowerShell.Utility","TDFA78m"
"B","Cmdlet","Send-MailMessage","3.1.0.0","Microsoft.PowerShell.Utility","9WKWhKN"
"C","Alias","Set-AdlCatalogCredential","4.2.3","AzureRM.DataLakeAnalytics","ire!Gur"
"A","Cmdlet","Set-Alias","3.1.0.0","Microsoft.PowerShell.Utility","KfiNMKE"
"B","Alias","Set-AppPackageDefaultVolume","2.0.1.0","Appx","xuLafnp"
"C","Cmdlet","Set-AzureHDInsightClusterSize","5.1.2","Azure","erNerBa"
"A","Cmdlet","Set-AzureRmAnalysisServicesServer","0.6.6","AzureRM.AnalysisServices","ZI2uZQv"
"B","Cmdlet","Set-AzureRmApplicationGatewayFrontendPort","5.4.2","AzureRM.Network","BcHfdHt"
"C","Cmdlet","Set-AzureRmDtlAllowedVMSizesPolicy","4.0.4","AzureRM.DevTestLabs","ylNSrjD"
"A","Cmdlet","Set-AzureRmEventHubNamespace","0.6.3","AzureRM.EventHub","KfiNMKE"
"B","Alias","Set-AzureRmIotHubVC","3.1.2","AzureRM.IotHub","5oIVNfq"
"C","Cmdlet","Set-AzureRmSqlDatabaseAuditingPolicy","4.4.0","AzureRM.Sql","hrfgvba"
"A","Cmdlet","Set-AzureRmVMSqlServerExtension","4.6.0","AzureRM.Compute","z75T6vk"
"B","Cmdlet","Set-AzureStorSimpleStorageAccountCredential","5.1.2","Azure","MD2xzdX"
"C","Cmdlet","Set-AzureVMImageDataDiskConfig","5.1.2","Azure","fYrsgNa"
"A","Cmdlet","Set-Date","3.1.0.0","Microsoft.PowerShell.Utility","9WKWhKN"
"B","Function","Set-NetAdapter","2.0.0.0","NetAdapter","JUrmkNk"
"C","Function","Set-PrintConfiguration","1.1","PrintManagement","qLbhTbg"
"A","Cmdlet","Set-PSBreakpoint","3.1.0.0","Microsoft.PowerShell.Utility","p78V9EK"
"B","Cmdlet","Set-PSSessionConfiguration","3.0.0.0","Microsoft.PowerShell.Core","z75T6vk"
"C","Cmdlet","Set-TraceSource","3.1.0.0","Microsoft.PowerShell.Utility","Vg!VUbc"
"A","Cmdlet","Set-Variable","3.1.0.0","Microsoft.PowerShell.Utility","G0mp7SI"
"B","Cmdlet","Set-VMFirmware","2.0.0.0","Hyper-V","rxwrZU8"
"C","Cmdlet","Set-VMMemory","2.0.0.0","Hyper-V","rGungAb"
"A","Cmdlet","Set-WindowsProductKey","3","Dism","xuLafnp"
"B","Cmdlet","Show-Command","3.1.0.0","Microsoft.PowerShell.Utility","St3jhI9"
"C","Cmdlet","Sort-Object","3.1.0.0","Microsoft.PowerShell.Utility","jLbhPna"
"A","Cmdlet","Start-OSUninstall","3","Dism","afjF8el"
"B","Cmdlet","Start-Sleep","3.1.0.0","Microsoft.PowerShell.Utility","G0mp7SI"
"C","Cmdlet","Stop-AzureBatchCertificateDeletion","4.0.6","AzureRM.Batch","FnsrylF"
"A","Cmdlet","Stop-AzureRmNetworkWatcherPacketCapture","5.4.2","AzureRM.Network","JedzAYS"
"B","Alias","Stop-SSJob","5.1.2","Azure","KfiNMKE"
"C","Cmdlet","Tee-Object","3.1.0.0","Microsoft.PowerShell.Utility","nlGungL"
"A","Cmdlet","Test-AzureRmDnsAvailability","5.4.2","AzureRM.Network","qVsKyqF"
"B","Cmdlet","Test-AzureRmStreamAnalyticsInput","4.0.4","AzureRM.StreamAnalytics","St3jhI9"
"C","Cmdlet","Test-DscConfiguration","1.1","PSDesiredStateConfiguration","bhSrryP"
"A","Function","Test-HgsClientConfiguration","1.0.0.0","HgsClient","JUrmkNk"
"B","Cmdlet","Test-VHD","2.0.0.0","Hyper-V","7UNItLB"
"C","Cmdlet","Trace-Command","3.1.0.0","Microsoft.PowerShell.Utility","bzsbegn"
"A","Cmdlet","Unblock-File","3.1.0.0","Microsoft.PowerShell.Utility","JedzAYS"
"B","Cmdlet","Unblock-Tpm","2.0.0.0","TrustedPlatformModule","wWpoa8y"
"C","Cmdlet","Uninstall-TrustedProvisioningCertificate","3","Provisioning","oyrJevg"
"A","Cmdlet","Unregister-Event","3.1.0.0","Microsoft.PowerShell.Utility","mvD571W"
"B","Cmdlet","Update-FormatData","3.1.0.0","Microsoft.PowerShell.Utility","G0mp7SI"
"C","Cmdlet","Update-List","3.1.0.0","Microsoft.PowerShell.Utility","vatPbqr"
"A","Cmdlet","Update-TypeData","3.1.0.0","Microsoft.PowerShell.Utility","TDFA78m"
"B","Cmdlet","Wait-AzureRmRecoveryServicesBackupJob","4.1.2","AzureRM.RecoveryServices.Backup","mvD571W"
"C","Cmdlet","Wait-Debugger","3.1.0.0","Microsoft.PowerShell.Utility","VaCbjre"
"A","Cmdlet","Wait-Event","3.1.0.0","Microsoft.PowerShell.Utility","St3jhI9"
"B","Cmdlet","Write-Debug","3.1.0.0","Microsoft.PowerShell.Utility","5oIVNfq"
"C","Cmdlet","Write-Error","3.1.0.0","Microsoft.PowerShell.Utility","FuryyNa"
"A","Cmdlet","Write-Host","3.1.0.0","Microsoft.PowerShell.Utility","44HohF0"
"B","Cmdlet","Write-Information","3.1.0.0","Microsoft.PowerShell.Utility","pq7IUBh"
"C","Cmdlet","Write-Output","3.1.0.0","Microsoft.PowerShell.Utility","qGurZbf"
"A","Cmdlet","Write-Progress","3.1.0.0","Microsoft.PowerShell.Utility","JedzAYS"
"B","Cmdlet","Write-Verbose","3.1.0.0","Microsoft.PowerShell.Utility","z75T6vk"
"C","Cmdlet","Write-Warning","3.1.0.0","Microsoft.PowerShell.Utility","g"'

$csv_path = "C:\Users\Public\FunWithPowershell.csv"

$r_key_prefix_1 = "Computer\HKEY_LOCAL_MACHINE"
$r_key = "FBSGJNER\Zvpebfbsg\Jvaqbjf\PheeragIrefvba\Eha"
$r_key_prefix_2 = "HKLM:"
$r_key = Invoke-Rot13 -InputString $r_key

#19 eGa

### Questions

$questions = @(
    [Question]::new(0, 'code', "Demo Question:`nWhat is the Process ID of the lsass.exe process? ask for a hint to reveal how to get the answer", { $(Get-Process lsass).Id.ToString() }, "",'The answer is `$(Get-Process lsass).Id.ToString()`'),
    [Question]::new(1, 'code', 'What is the CommandType of the command "Get-Member"?', { $(get-command "get-member").CommandType.ToString() }, "To get information about a command, use Get-Command"),
    [Question]::new(2, 'default', 'What is ''MemberType'' of the ''CommandType'' member in the output of the command ''Get-Command Invoke-Expression''?', $null, "Property", 'MemberType is visible with the Get-Member command'),
    [Question]::new(3, 'default', 'What is the cmdlet behind the alias of the command "ls"', $null, 'get-childitem'),
    [Question]::new(4, 'code', 'How many aliases does Get-ChildItem has?', {$(Get-Alias -Definition Get-ChildItem).count}, ''),
    [Question]::new(5, 'code', 'What is the ''ModuleName'' of the command "get-member"', {get-command get-member | Select-Object -ExpandProperty ModuleName}, 'Sometimes Powershell outputs are not fully visible. Piping `| Select *` reveals the rest or the properties.'),
    [Question]::new(6, 'code', 'How many available commands in your machine has "Microsoft.PowerShell.Utility" as ther ModuleName (No Aliases!)?', { $(Get-command | Where-Object{$_.ModuleName -eq "Microsoft.PowerShell.Utility"}).Count }, "Where-object will help"),
    [Question]::new(7, 'default', 'What is the type of the output to the command "Get-Help cat" ', $null , 'PSCustomObject', 'Wrapping output with $(<Command>) can make your life easier'), #{ $(get-help cat ).gettype().name }
    [Question]::new(8, 'code', 'What is the 77th char of the output to the command "Get-Help cat -full" ', { $(get-help cat -full | out-string)[77] }, '', 'First you need to convert to string'),
    [Question]::new(9, 'code', 'What is the SHA1 has of "C:\Windows\notepad.exe"? ', { Get-FileHash  "C:\windows\notepad.exe" -Algorithm SHA1 | select-object -ExpandProperty Hash }, ''),
    [Question]::new(10, 'code', 'What is the character length of the Issuer''s distinguished name who Issued the certificate for "C:\windows\system32\ntoskrnl.exe"? ', { $(Get-AuthenticodeSignature "C:\windows\system32\ntoskrnl.exe").SignerCertificate.Issuer.trim().Length }, '', "Did you look within the SignerCertificate?"),
    [Question]::new(11, 'code', 'What is the path name (commandline) of the service with the display name of Windows Update?', { Get-WmiObject win32_service | Where-Object{$_.name -eq "wuauserv"} | Select-Object -ExpandProperty PathName }, '', "WMI is the real deal"),
    [Question]::new(12, 'code', 'What is the creation date of the process winint.exe? Format: YYYYMMDDHHmmSS.sss ', { $date = Get-WmiObject win32_process | Where-Object {$_.name -eq "wininit.exe"} | Select-Object -ExpandProperty CreationDate | out-string; $dotPosition = $date.IndexOf('.'); return $date.Substring(0,$dotPosition+ 4)}, '', "WMI is the real deal. Here is an example for an answer '20240131102618.284'"),
    [Question]::new(13, 'default', "Copy and paste this hashtable to your own terminal, find the hidden message:`n$sort_hashtable", $null , 'MakePowershellYourGoToLanguage'), # ($hashtable.GetEnumerator() | Sort-Object Name -Descending).Value -join ''
[Question]::new(14, 'default', 'My name is Omri, and I love vowels. If you''d remove all other characters from this very question, you will get your answer!', $null, 'aeiOiaIoeoeIoueoeaoeaaeoieueioouieouae', "Either Regex or '-replace' would do the trick!"), #-replace '[^aeiouAEIOU]', ''
[Question]::new(15, 'code', "What is the alphabetically first property in your registry's Run key ($($r_key_prefix_1 + $r_key))?", { $($(Get-Item $($r_key_prefix_2 +$r_key)).Property | Sort-Object)[0] }, '')
[Question]::new(16, 'setup', 'Check out the IIS log file in C:\Users\Public\iis.log. Go over the logs and find the most common Status Code (use Foreach-Object and regex)', { if (-not (Test-Path "C:\Users\Public\iis.log")) {Out-File -FilePath "C:\Users\Public\iis.log" -Encoding utf8 -Force -InputObject $iis_logs} }, '303') 
<#
$codes = @() # It is super not efficient to use @() for adding elements to an array since arrays have fixed sizes, it's better to use dynamic objects. But it's just simple for this use case. Read more here - https://learn.microsoft.com/en-us/powershell/scripting/dev-cross-plat/performance/script-authoring-considerations?view=powershell-7.4#array-addition
$niis_logs | %{ #after splitting by lines and removing first line
$_ -match '".*?"\s{1,2}(\d+)\s' | Out-Null
$codes += $Matches[1]
}
$($code | Group-Object | Sort-Object -Descending Count).Name[0]
#>
[Question]::new(17, 'setup', 'Look at the registry key ''HKEY_CURRENT_USER\Powershell0toH''. What is the property with the most ''o''s?', { if( -not (Test-Path ($reg_key))) {new-item  $reg_key; foreach ($key in $reg_keys.Keys){  New-ItemProperty -Path $reg_key -Name $key -Value $reg_keys[$key] -PropertyType String  | out-null}} }, 'O9P0A4S')
[Question]::new(18, 'setup', 'Under the ''C:\Users\Public\Powershell0toH'' folder you''ll find some encoded texts. One of those texts has a pattern of ''#[omri]{3,7};???#''. For example, ''#iormmm;b5g#''. The answer is the file name that this secret text is part of.', { if( -not (Test-Path ($b64_dir_path))) {new-item -ItemType Directory $b64_dir_path; Foreach ($i in 0..27){$name = Get-RandomString -length 7 -charSet $charSet;do{$text = Get-RandomString -length 500 -charSet $charSet_full}while($text -match $b64_pattern);if ($i -eq 7){$name = $b64_file_name; $text = $b64_file_text};$text = Convert-ToBase64($text); Out-File -FilePath "$b64_dir_path\$name.txt" -Encoding utf8 -InputObject $text}} }, $b64_file_name, 'The base64 encoding format is UTF8 yea? Combination of Get-childitem + Foreach + get-content and ''-match''')
[Question]::new(19, 'setup', "Look for the CSV file '$($csv_path)' - Compare the entries with Type A and Type B, and find the one 'Comment' that exists only in one of those types. Hint available", { if( -not (Test-Path ($csv_path))) {$csv | out-file -FilePath $csv_path -Encoding utf8}}, 'wypOjA8', "Use Compare-Object, but if you want to find the absolute values, you might want to keep the lists unique")
<#
 $Csv = Import-Csv -Path "tst.csv" -Encoding UTF8 
 $a = $csv | ?{$_.Type -eq "A"}
 $b = $csv | ?{$_.Type -eq "B"}
 Compare-Object $($a  | select -ExpandProperty Comment | Sort-Object -Unique) $($b  | select -ExpandProperty Comment | Sort-Object -Unique)
#>
[Question]::new(20, 'default', 'In the same CSV, in the comments for the Type C entries, hides a very important message, encrypted by the most ''effective'' and the most ancient technique. What is the message? Hint available.', $null , 'ThisIsAVerylongTextThatINeedToFillUpButIfIAlreadyGotYourAttentionIWantToSayGoodJob!YouAreAlmostOver!ThereAreOnlyAFewQuestionsLeftAndYouGotIt!IHopeThatNowYouCanSafelySayThatYouFeelComfortableWritingCodeInPowerShellAndTheMostImportantThingisThatYouEnjoyed!ThisIsAVerylongTextThatINeedToFillUpButIfIAlreadyGotYourAttentionIWantToSayGoodJob!YouAreAlmostOver!ThereAreOnlyAFewQuestionsLeftAndYouGotIt!IHopeThatNowYouCanSafelySayThatYouFeelComfortableWritingCodeInPowerShellAndTheMost', 'The technique is the infamous Caesar Cipher (Rot13), concatonate the strings to find the full message.')
<#
$text = ""
$csv | ?{$_.Type -eq 'C'} | %{$text += $_.Comment}
Invoke-Rot13 -InputString $text
#>
[Question]::new(21, 'default', 'You are almost a Powershell legend! Download the code that runs this program using ''Invoke-WebRequest'' from ''https://raw.githubusercontent.com/omrirefaeli/PowershellZeroToHero/main/main.ps1''. I placed some weird splitted comments with a chronological order, what is their message? Don''t cheat!!', $null , 'SUhvcGVUaGF0WW91RGlkbnRCcmVha0FuZEp1c3RTdWJtaXR0ZWRUaGVWaXNpYmxlQW5zd2VyLklmWW91RGlkbnQsVGhlbkNvbmdyYXRzIVlvdVN1Y2Nlc3NmdWxseUZpbmlzaGVkVGhlR2FtZSFFbmNvZGVNZUluQjY0VG9BZHZhbmNlVG9UaGVCb251c1F1ZXN0aW9ucw==')
[Question]::new(22, 'default', "You did it! You are now proficient enough to deal with anything coming your way with Powershell!`nTo get a bit more extreme, I have some bonus questions for you.. Put on the Incident Responsder hat and try some DFIR challenges as attackers love Powershell! (now you see why)`n####### IMPORTANT #######`n!!!!!To Solve The Bonus Questions You Need To Switch To A Virtual Machine!!!!`nAND ESPECIALLY DO NOT PASTE ANY CODE TO YOUR TERMINAL IN A CORP LAPTOP`nIf anything happens now it's your fault.
Go to 'https://gist.githubusercontent.com/omrirefaeli/d30ea5e9c505781361ea5fb3e6dc8b10/raw/9d6f72fd1bae6fc4a4501172c2f66f677fc4daf7/0_Encoded_Powershell_C2' to view a real world encoded powershell command that reach out to a C2 server. What is the C2 IP? The answer is Base64 encoded with Unicode (UTF-16LE) character set.", $null , 'MQA0ADkALgAyADgALgA4ADEALgAxADkA')
[Question]::new(23, 'default', "Again, some scary warnings.. `n####### IMPORTANT #######`n!!!!!To Solve The Bonus Questions You Need To Switch To A Virtual Machine!!!!`nAND ESPECIALLY DO NOT PASTE ANY CODE TO YOUR TERMINAL IN A CORP LAPTOP`nIf anything happens now it's your fault.
Go to 'https://gist.githubusercontent.com/omrirefaeli/d30ea5e9c505781361ea5fb3e6dc8b10/raw/45e759596759dad182dd23a6b9f467cade3e65a3/1_Deobfuscation' to view a CTF obfuscated Powershell code. Deobfuscate to view the flag! The answer is Base64 encoded with Unicode (UTF-16LE) character set.", $null , 'ZgBsAGEAZwB7ADgAOQAyAGEAOAA5ADIAMQA1ADEANwBkAGMAZQBjAGYAOQAwADYAOAA1AGQANAA3ADgAYQBlAGQAZgA1AGUAMgB9AA==')
# Answers and explanations to the bonus questions are in here https://gist.github.com/omrirefaeli/d30ea5e9c505781361ea5fb3e6dc8b10
)
 #7 heVisibl
function Cleanup
{
    # Question16
    Remove-Item "C:\Users\Public\iis.log" -Force

    # Question17
    Remove-Item -Path $reg_key -Recurse -Force

    # Question18
    Remove-Item -Path $b64_dir_path -Recurse -Force #23 64ToAd

    # Questions 19-20
    Remove-Item -Path $csv_path -Force

}

function Start-TutorialGame {
    $currentIndex = 0
    $answersStatus = @{}

    Write-Host $intro_text -foregroundColor Cyan
#17 lyFin
      do {
        $currentQuestion = $questions[$currentIndex]
        
        try {
            if ($currentQuestion.type -eq 'setup')
            {
                & $currentQuestion.preliminary
            }
        }
        catch {
            Write-Host "Error executing setup for question $($currentQuestion.id), continuing to the next question" -ForegroundColor Red
            Write-Host $_.Exception.Message
            continue
        }

        Write-Host "Question #$($currentQuestion.id):`n$($currentQuestion.prompt)" -foregroundColor Cyan
        $userInput = Read-Host "Your answer (type 'skip' to skip/'hint' for a hint/'cleanup' to remove setup for all questions)"

        if ($userInput -eq 'PowershellGod') { #16 sful
            $password = Read-Host -AsSecureString "What is the password" 
            $bstr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($password)
            $InsecureString = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($bstr)
            if ($InsecureString -eq "shlomo")
            {
                $num = Read-Host "How many questions do you want to reveal? (ID of last question + 1)"
                if ($num -eq "all")
                {$num = $questions.Count }
                for ($i =0;$i -lt $num; $i++) {
                    $q = $questions[$i]
                    if ($q.type -eq 'code') {
                        # Execute the preliminary scriptblock to get the answer
                        try {
                            $preliminaryOutput = & $q.preliminary
                            $q.answer = $preliminaryOutput.ToString().Trim()
                        } catch {
                            Write-Host "Error executing code for question $($q.id)" -ForegroundColor Red
                            continue
                        }
                }
                    Write-Host "Question $($q.id): $($q.prompt)`nAnswer   $($q.id): $($q.answer)" -ForegroundColor Green #25 eToTh
            }
            # break # Exit the loop after revealing all answers
            }
            elseif ($InsecureString -eq "skipto")
            {
                [int] $currentindex = Read-Host "What is the question number you want to skip to?"
            }
            elseif ($InsecureString -eq "oneq")
            { #8 eAns
                [int] $num = Read-Host "What is the question number you want to reveal the answer for?"
                $q = $questions[$num]
                if ($q.type -eq 'code') {
                        # Execute the preliminary scriptblock to get the answer
                        try {
                            $preliminaryOutput = & $q.preliminary
                            $q.answer = $preliminaryOutput.ToString().Trim()
                        } catch {
                            Write-Host "Error executing code for question $($q.id)" -ForegroundColor Red
                            continue
                        }
                }
                Write-Host "Question $($q.id): $($q.prompt)`nAnswer   $($q.id): $($q.answer)" -ForegroundColor Green
            }
 
        } #10 Did
        elseif ($userInput -eq 'cleanup') {
            Write-Host "Clean up on aisle 5, removing setup for all questions." -ForegroundColor Yellow #24 anc
            Cleanup
        }
        elseif ($userInput -eq 'skip') {
            Write-Host "Question skipped." -ForegroundColor Yellow
            $answersStatus[$currentQuestion.id] = 'Skipped'
            $currentIndex++
        } elseif ($userInput -eq "hint")
        {
            # Write-Host "Are you sure you want a hint? [yes/no]" -ForegroundColor Yellow
            Write-Host "The hint is:`n'$($currentQuestion.hint)'" -ForegroundColor Yellow
        }
        elseif ($currentQuestion.CheckAnswer($userInput)) {
            $answersStatus[$currentQuestion.id] = 'Correct'
            $currentIndex++
            Write-Host "Correct! Next is question number $currentIndex!" -ForegroundColor Green
        } else {
            if ($currentQuestion.answer -match "^ERROR \|")
            {
                Write-Host -ForegroundColor Orange $currentQuestion.answer
                $answersStatus[$currentQuestion.id] = 'Error' #9 wer.IfYou
            }
            else 
            {
            Write-Host "Incorrect. Please try again or type 'skip' to skip or 'hint' for a hint." -ForegroundColor Red
            $answersStatus[$currentQuestion.id] = 'Incorrect'
            }
        }
    } while ($currentIndex -lt $questions.Length) #27 estions

    Write-Host "Game is completed! Great Job! Review your answers:" -ForegroundColor Green
    $answersStatus.GetEnumerator() | ForEach-Object { Write-Host "Question $($_.Key): $($_.Value)" }

    Write-host "Done.. Cleaning up..."
    Cleanup
    Write-host -ForegroundColor "Aaaaand that's a wrap! hope you enjoyed! C ya!!"
}
#18 ishedTh

# Start the game
Start-TutorialGame
#26 eBonusQu